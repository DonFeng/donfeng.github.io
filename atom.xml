<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DonFneg&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://donfeng.top/"/>
  <updated>2017-09-12T02:35:56.013Z</updated>
  <id>http://donfeng.top/</id>
  
  <author>
    <name>Don Feng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git</title>
    <link href="http://donfeng.top/2017-09-06/git/"/>
    <id>http://donfeng.top/2017-09-06/git/</id>
    <published>2017-09-06T07:24:14.138Z</published>
    <updated>2017-09-12T02:35:56.013Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><blockquote><p>Git是目前世界上最先进的分布式版本控制系统(没有之一).<br><a href="http://www.jianshu.com/p/072587b47515" target="_blank" rel="external"><strong>强烈推荐</strong>-Git指南</a></p></blockquote><a id="more"></a><h2 id="获取Git仓库"><a href="#获取Git仓库" class="headerlink" title="获取Git仓库"></a>获取Git仓库</h2><ol><li>初始化<br><code>git init</code>,在工作区下生成<code>.git</code>隐藏目录.</li><li>Colone<br><code>git clone git@github.com:DonFeng/mee.git</code>,在工作区下生成mee目录.<br>[注意:Git支持多种协议,但git协议速度最快]</li></ol><h2 id="正常作业"><a href="#正常作业" class="headerlink" title="正常作业"></a>正常作业</h2><ol><li><code>git add &lt;name&gt;</code>,把文件操作添加到暂存区,可批量.</li><li><code>git commit -m &quot;balabala&quot;</code>,把暂存区的所有内容提交到当前分支.<br>频繁使用<code>git status</code>,随时掌握工作区的状态;如果文件被修改过,用<code>git diff</code>可以查看修改内容.<br><code>git log --graph --pretty=oneline --abbrev-commit</code></li></ol><h2 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h2><p><code>git remote add origin https://github.com/DonFeng/mee.git</code> 关联远程库<br><code>git remote -v</code> 查看远程库信息<br><code>git push origin &lt;branch_name&gt;</code> 从本地推送分支<br>[注意:push时;第一次推送需加参数<code>-u</code>]<br>如果推送失败，先用<code>git pull</code>抓取远程的新提交,遇见冲突先处理.</p><p><code>git checkout -b branch-name origin/branch-name</code>本地创建和远程分支对应的分支，本地和远程分支的名称最好一致；<br><code>git branch --set-upstream branch-name origin/branch-name</code>建立本地分支和远程分支的关联</p><h2 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h2><ol><li>未add时,用命令<code>git checkout -- &lt;filename&gt;</code>.</li><li>已add而未commit时,先用命令<code>git reset HEAD &lt;filename&gt;</code>,再按1操作.</li><li>已commit时,即版本回退.</li><li>版本回退,<ul><li><code>git reset HEAD &lt;filename&gt;</code>在Git中,用HEAD表示当前版本,上一个版本就是<code>HEAD^</code>,往上100个版本简写成<code>HEAD~100</code>;</li><li><code>git reset --hard &lt;commit_id&gt;</code>,用<code>git log</code>可获得历史版本号,用<code>git relog</code>可获得未来版本号.<br>[注意:版本号(commit_id)是一个SHA1计算出来的一个非常大的数字,用十六进制表示.版本号没必要写全,Git会自动去找]</li></ul></li></ol><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ol><li><p>基本操作</p><ul><li><code>git branch</code>          查看</li><li><code>git branch &lt;name&gt;</code>   创建</li><li><code>git branch -d &lt;name&gt;</code>删除</li><li><code>git checkout &lt;name&gt;</code> 切换</li><li><code>git checkout -b &lt;name&gt;</code>创建+切换</li><li><code>git merge &lt;name&gt;</code>合并某分支到当前分支<br>[注意:merger时,加<code>--no-ff</code>参数就可以用普通模式合并,合并后的历史有分支能看出来曾经做过合并,而fast forward合并就看不出来曾经做过合并.]</li></ul></li><li><p>冲突</p></li><li><p>分支策略<br>因为创建、合并和删除分支非常快,所以Git鼓励你使用分支完成某个任务,合并后再删掉分支.<br><strong>master</strong>,仅用来发布新版本.<br><strong>dev</strong>,   实际作业.<br><strong>other</strong>, 按工作需要 eg:bug,test…</p></li><li><p>快速向前合并<br> 通常,一个合并会产生一个合并提交(commit),把两个父分支里的每一行内容都合并进来.<br> 但是,如果当前的分支和另一个分支没有内容上的差异,git 就会执行一个“快速向前”(fast forward)操作;git不创建任何新的提交(commit),只是将当前分支指向合并进来的分支.</p></li></ol><h2 id="切换工作场景"><a href="#切换工作场景" class="headerlink" title="切换工作场景"></a>切换工作场景</h2><blockquote><p>当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场</p></blockquote><p><code>git stash</code> 保存<br><code>git stash list</code> 查看<br>恢复:<br>  1.<code>git stash apply</code>恢复后stash内容并不删除,需要用<code>git stash drop</code>来删除;<br>  2.<code>git stash pop</code>,恢复的同时把stash内容也删了.</p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><blockquote><p>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针.分支可以移动，标签不能移动.</p></blockquote><p><code>git tag &lt;tagname&gt; &lt;commit_id&gt;</code> 新建，默认为HEAD，也可以指定一个commit_id；<br><code>git tag -d &lt;tagname&gt;</code>          删除<br><code>git tag -a &lt;tagname&gt; -m &quot;bla&quot;</code> 指定标签信息,加参数<code>-s</code>用PGP签名标签.<br><code>git tag</code>                       查看所有标签<br><code>git show &lt;tagname&gt;</code>            查看详细<br><code>git push origin &lt;tagname&gt;</code>     推送本地标签<br><code>git push origin --tags</code>        推送全部未推送过的本地标签<br><code>git push origin :refs/tags/&lt;tagname&gt;</code> 从远程删除</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>目标库fork(get读写权限)–&gt;|&lt;–pull request远程库clone–&gt;|&lt;–push本地库</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>全局:<code>~/.gitconfig</code>,用户根目录下<br>工作区:<code>./.git/config</code>,当前工作区下</p><p>eg:<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code><br><code>git config --global color.ui true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#./.git/config</div><div class="line">[alias]</div><div class="line">  co = checkout</div><div class="line">  ci = commit</div><div class="line">  br = branch</div><div class="line">  st = status</div><div class="line">  lg = log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit</div><div class="line">[user]</div><div class="line">  name = FengChao</div><div class="line">  email = fengchaos@foxmail.com</div></pre></td></tr></table></figure><p>参考<br>1.<a href="https://git-scm.com" target="_blank" rel="external">git官方</a><br>2.<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰-Git教程</a><br>3.<a href="http://www.linuxidc.com/Linux/2013-10/91053.htm" target="_blank" rel="external">荐BOOK:《GIT权威指南》</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git简介&quot;&gt;&lt;a href=&quot;#Git简介&quot; class=&quot;headerlink&quot; title=&quot;Git简介&quot;&gt;&lt;/a&gt;Git简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Git是目前世界上最先进的分布式版本控制系统(没有之一).&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/072587b47515&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;强烈推荐&lt;/strong&gt;-Git指南&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://donfeng.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://donfeng.top/2017-09-06/hello-world/"/>
    <id>http://donfeng.top/2017-09-06/hello-world/</id>
    <published>2017-09-06T06:21:44.593Z</published>
    <updated>2017-09-08T07:08:42.549Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="http://donfeng.top/categories/Hexo/"/>
    
    
      <category term="hello" scheme="http://donfeng.top/tags/hello/"/>
    
      <category term="hexo" scheme="http://donfeng.top/tags/hexo/"/>
    
  </entry>
  
</feed>
